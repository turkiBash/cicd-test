# name: CI/CD Pipeline

# on:
#   pull_request:
#     branches: [main]

# jobs:
#   build-push-deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: deploy
#         id: branch-deploygit
#         uses: github/branch-deploy@v8.0.0

#       - name: Check Out Repo
#         if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
#         uses: actions/checkout@v4
#         with:
#           ref: ${{ steps.branch-deploy.outputs.ref }}

#       - name: Build Docker Image
#         run: docker build -t ghcr.io/${{ github.repository }}/cicd-test:v1 .

#       - name: Log in to GitHub Container Registry
#         uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{ github.repository_owner }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Push to GitHub Container Registry
#         run: docker push ghcr.io/${{ github.repository }}/cicd-test:v1

#       - name: SSH and Deploy on Server
#         if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop != 'true' }}
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.REGISTRY_USERNAME }}
#           password: ${{ secrets.REGISTRY_PASSWORD }}
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           script: |
#             echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
#             docker pull ghcr.io/${{ github.repository }}/cicd-test:v1
#             docker stop cicd-test || true
#             docker rm cicd-test || true
#             docker run -d --name cicd-test -p 2000:2000 ghcr.io/${{ github.repository }}/cicd-test:v1

name: 'branch deploy demo'

# The workflow to execute on is comments that are newly created
on:
  issue_comment:
    types: [created]

# Permissions needed for reacting and adding comments for IssueOps commands
permissions:
  pull-requests: write
  deployments: write
  contents: write
  checks: read

jobs:
  demo:
    if: ${{ github.event.issue.pull_request }} # only run on pull request comments
    runs-on: ubuntu-latest
    steps:
      # Execute IssueOps branch deployment logic, hooray!
      # This will be used to "gate" all future steps below and conditionally trigger steps/deployments
      - name: branch-deploy
        id: branch-deploy
        uses: github/branch-deploy@v8.1.1
        with:
          trigger: '.deploy'
          noop_trigger: '.noop'
          reaction: 'eyes'
          environment: 'production'
          stable_branch: 'main'

      # Run your deployment logic for your project here - examples seen below

      # Checkout your projects repository based on the ref provided by the branch-deploy step
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.branch-deploy.outputs.ref }}

      - name: Build Docker Image
        run: docker build -t ghcr.io/${{ github.repository }}/cicd-test:v1 .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Push to GitHub Container Registry
        run: docker push ghcr.io/${{ github.repository }}/cicd-test:v1

      - name: SSH and Deploy on Server
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop != 'true' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
            docker pull ghcr.io/${{ github.repository }}/cicd-test:v1
            docker stop cicd-test || true
            docker rm cicd-test || true
            docker run -d --name cicd-test -p 2000:2000 ghcr.io/${{ github.repository }}/cicd-test:v1
